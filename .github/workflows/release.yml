name: WolkenWelten Release

on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
    ## - release

env:
  BIN_NAME: wolkenwelten
  PROJECT_NAME: wolkenwelten
  REPO_NAME: wolkenwelten/wolkenwelten

jobs:
  dist:
    name: Dist
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # don't fail other jobs if one fails
      matrix:
        build: [x86_64-linux, x86_64-macos, x86_64-windows] #, aarch64-linux, x86_64-win-gnu, win32-msvc
        include:
        - build: x86_64-linux
          os: ubuntu-20.04
          rust: stable
          target: x86_64-unknown-linux-gnu
        - build: x86_64-macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
        - build: x86_64-windows
          os: windows-2019
          rust: stable
          target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install additional dependencies
        if: matrix.build == 'x86_64-linux' || matrix.build == 'aarch64-linux'
        run: sudo apt-get -y install libasound2-dev libfontconfig1-dev libfreetype6-dev

      - name: Build release (Linux)
        if: matrix.build == 'x86_64-linux' || matrix.build == 'aarch64-linux'
        run: bash tools/build-linux/build.sh

      - name: Build release (MacOS)
        if: matrix.build == 'x86_64-macos' || matrix.build == 'aarch64-macos'
        run: bash tools/build-macos/build.sh

      - name: Build release (Windows)
        if: matrix.build == 'x86_64-windows' || matrix.build == 'aarch64-windows'
        run: bash tools/build-windows/build.sh

      - uses: actions/upload-artifact@v2.2.4
        with:
          name: bins-${{ matrix.build }}
          path: dist

  publish:
    name: Publish
    needs: [dist]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2
        with:
          submodules: false

      - uses: actions/download-artifact@v2
      - run: ls -al bins-*

      - name: Calculate tag name
        run: |
          name=dev
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            name=${GITHUB_REF:10}
          fi
          echo ::set-output name=val::$name
          echo TAG=$name >> $GITHUB_ENV
        id: tagname

      - name: Build archive
        shell: bash
        run: |
          set -ex
          mkdir dist
          mv bins-*/* dist/

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.PAT }}
          file: dist/*
          file_glob: true
          tag: ${{ steps.tagname.outputs.val }}
          overwrite: true

      - name: Extract version
        id: extract-version
        run: |
          printf "::set-output name=%s::%s\n" tag-name "${GITHUB_REF#refs/tags/}"
